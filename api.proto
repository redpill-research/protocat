syntax = "proto3";

import "models.proto";

package api;

// desc: Auth service
service WalletAuthService {
    /**
        path: /api/v1/auth/start
        description: Start logic process
        method: POST
        version: v1
        auth: false
    */
    rpc AuthStart(LoginStartRequest) returns (LoginStartResponse) {}

    /**
        path: /api/v1/auth/confirm
        description: Confirm login process
        method: POST
        version: v1
        auth: false
    */
    rpc AuthConfirm(LoginFinishRequest) returns (LoginFinishResponse) {}
}

message AuthStartRequest {
    string address = 1;
}

message AuthStartResponse {
    string message_for_sign = 1;
}

message AuthConfirmRequest {
    string address = 1;
    string signature = 2;
}

message AuthConfirmResponse {
    string token = 1;
    string key = 2;
    string nonce = 3;
}

// desc: Country service
service CountryService {
    /**
        path: /api/v1/countries
        description: Get countries list
        method: POST
        version: v1
        auth: false
    */
    rpc GetCountries(GetCountriesRequest) returns (GetCountriesResponse) {}
}

message GetCountriesRequest {}

message GetCountriesResponse {
    repeated models.Country countries = 1;
}

// desc: Products service
service ProductsService {
    /**
        @path: /api/v1/products
        @description: Get products list by country
        @method: POST
        @version: v1
        @auth: false
    */
    rpc GetProductsByCountry(GetProductsByCountryRequest) returns (GetProductsByCountryResponse) {}

    /**
        path: /api/v1/purchase
        description: Purchase product
        method: POST
        version: v1
        auth: true
    */
    rpc PurchaseProduct(PurchaseProductRequest) returns (PurchaseProductResponse) {}
}

message GetProductsByCountryRequest {
    /**
        @description: country of products
        @required: true
    */
    string country_id = 1;
}

message GetProductsByCountryResponse {
    repeated models.Product products = 1;
}

message PurchaseProductRequest {
    string product_id = 1;
    string country_id = 2;
    double product_denomination = 3;
}

message PurchaseProductResponse {
    string wallet = 1;
    double amount = 2;
    string memo = 3;
    string purchase_id = 4;
}

// desc: Referral system service
service ReferralService {
    /**
        path: /api/v1/referral/info
        description: Get referral info
        method: POST
        version: v1
        auth: true
    */
    rpc GetReferralInfo(GetReferralInfoRequest) returns (GetReferralInfoResponse) {}

    /**
        path: /api/v1/referral/send_invite
        description: send invite
        method: POST
        version: v1
        auth: true
    */
    rpc SendInvite(SendInviteRequest) returns (SendInviteResponse) {}

    /**
        path: /api/v1/referral/generate_code
        description: Generate invite code
        method: POST
        version: v1
        auth: true
    */
    rpc GenerateInviteCode(GenerateInviteCodeRequest) returns (GenerateInviteCodeResponse) {}
}

message GetReferralInfoRequest {}

message GetReferralInfoResponse {
    int32 avalible_count = 1;
    repeated models.InviteCode generated_codes = 2;
    repeated string invited_addresses = 3;
}

message SendInviteRequest {
    string address = 1;
}

message SendInviteResponse {
    string tx = 1;
}

message GenerateInviteCodeRequest {}

message GenerateInviteCodeResponse {
    string code = 1;
}
